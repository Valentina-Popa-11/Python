# Python Intermediate - Case Study - Hacker Statistics - Data Camp

# Import packages needed
import numpy as np
import matplotlib.pyplot as plt

# Set seed()
np.random.seed(123)

# Initialize random_walk
all_walks = []

# Simulate random walk 500 times
for i in range(500) :
    random_walk = [0]
    for x in range(100) :

        step = random_walk[-1] # Set step: last element in random_walk

        dice = np.random.randint(1,7) # Roll the dice

        # Determine next step
        if dice <= 2:
            step = max(0, step - 1)
        elif dice > 2 and dice <= 5:
            step += 1
        else:
            step = step + np.random.randint(1,7)
        if np.random.rand() <= 0.001 :
            step = 0
        random_walk.append(step)
    all_walks.append(random_walk)

# Create and plot np_aw_t
np_aw_t = np.transpose(np.array(all_walks))

# Select last row from np_aw_t: ends
ends = np_aw_t[-1]

# Plot histogram of ends, display plot
plt.hist(ends)
plt.show()

sum = np.mean(ends >= 60)
print(sum)
sum * 100